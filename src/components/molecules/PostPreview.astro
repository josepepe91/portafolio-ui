---
import { MarkdownInstance } from "astro";
import { Post } from "../../types";

interface Props {
  post: MarkdownInstance<Post>;
  type?: "full" | "title";
  header?: string;
}
const { type = "full", header, post } = Astro.props;
const { frontmatter, url } = post;
const imgUrl = `url(${frontmatter.image?.url})`;
const dateOptions: object = {
  year: "numeric",
  month: "long",
  day: "numeric",
};
const date = frontmatter.pubDate
  ? new Date(frontmatter.pubDate).toLocaleDateString("en-US", dateOptions)
  : null;
---

<article class="post-preview">
  <a href={url}>
    {type === "full" && <div class="post-img" />}
    {header && <div class="uppercase">{header}</div>}
    <div class="post-content">
      <h3 class="post-title">
        {frontmatter.title}
      </h3>
      {
        type === "full" && (
          <p class="post-description">
            <slot />
          </p>
        )
      }
    </div>
    {
      date && (
        <div class="post-date">
          {date}{" "}
          <span class="material-symbols-rounded text-lg text-purple">
            {" "}
            event
          </span>
        </div>
      )
    }
  </a>
</article>
<style define:vars={{ imgUrl }}>
  .post-preview {
    @apply box-border text-right cursor-pointer;
  }
  .post-img {
    @apply box-border w-full h-32 bg-teal-dark rounded-2xl rounded-bl-none bg-cover bg-center;
    background-image: var(--imgUrl);
  }
  .post-content {
    @apply mt-3 mb-1 pr-2 border-r-4 border-teal;
  }
  .post-title {
    @apply pt-1;
  }
  .post-description {
    @apply py-1;
  }
  .post-date {
    @apply flex justify-end items-end gap-2 text-sm text-gray uppercase;
  }
</style>
